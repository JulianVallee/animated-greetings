name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Needed by build_changelog step to get all available tags, not only the latest

      # Init npm
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Used for the version bump/changelog commit
      - name: Set git username and email
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      # Build and run tests
      - run: npm ci
      - run: npm run test:unit
      - run: npm run test:components
      - run: npm run build --if-present
      - run: npm run test:e2e

      - run: npm run documentation:vue

      # Bumps version, generates CHANGELOG.md, commits the changes and pushes them with a new tag
      - run: npm run release

      # Used for the release
      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | xargs)
          echo "::set-output name=TAG::v$VERSION"

      - name: Get changelog
        id: get_changelog
        run: node ./scripts/ci/changelog-parser.js

      # Create release
      - name: Create release including build files
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          file: ./dist/animated-greetings.zip
          tag: "${{steps.get_version.outputs.TAG}}"
          release_name: "${{steps.get_version.outputs.TAG}}"
          overwrite: true
          body: "${{ steps.get_changelog.outputs.release}}"
